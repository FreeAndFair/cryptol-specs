module Primitive::Keyless::Hash::SHA3::SHA3_512 where
import `Primitive::Keyless::Hash::SHA3::SHA3
import Primitive::Keyless::Hash::utils
type digest = 512

/*
Test vectors from
https://csrc.nist.gov/projects/cryptographic-standards-and-guidelines/example-values#aHashing
*/
private
  toBytes : {n} (fin n) => [8*n] -> [n][8]
  toBytes x = reverse (split (reverse x))

property t1 = join (toBytes (sha3 [])) ==
  0xa69f73cca23a9ac5c8b567dc185a756e97c982164fe25859e0d1dcc1475c80a615b2123af1f5f94c11e3e9402c3ac558f500199d95b6d3e301758586281dcd26

property t2 = join (toBytes (sha3 0b11001)) ==
  0xa13e01494114c09800622a70288c432121ce70039d753cadd2e006e4d961cb27544c1481e5814bdceb53be6733d5e099795e5e81918addb058e22a9f24883f37



