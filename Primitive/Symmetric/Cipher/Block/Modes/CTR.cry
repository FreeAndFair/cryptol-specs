

// Cryptol CBC Implementation
// Copyright (c) 2010-2018, Galois Inc.
// www.cryptol.net
// You can freely use this source code for educational purposes.
// Author: Ajay Kumar Eeralla

module Primitive::Symmetric::Cipher::Block::Modes::CTR where
import Primitive::Symmetric::Cipher::Block::AES

// set the sizes
type ic = [128]
type block = [128]
type key = [128] //or [192] or [256]

ctrEnc : {n} (fin n) => ((block, key) -> block) -> key -> ic -> [n]block -> [n]block
ctrEnc enc k c ps = cs
    where cs = [(enc (c', k)^p) | p <- ps | c' <- ctrs]
          ctrs = [ c+i | i<- [0...]]

ctrDec : {n} (fin n) => ((block, key) -> block) -> key -> ic -> [n]block ->[n]block
ctrDec enc k c cs = ps
    where ps = [(enc (c', k) ^ct) | ct <- cs | c' <- ctrs]
          ctrs = [ c+i | i<- [0...]]

//property ctrEncCorrect enc k c ps = and [(ctrDec enc k c (ctrEnc enc k c pt)) == pt | pt <- ps ]


