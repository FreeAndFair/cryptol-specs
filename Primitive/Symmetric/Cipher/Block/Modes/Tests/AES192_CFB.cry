/*
 * Test vectors for AES192 in CFB mode.
 *
 * These are taken from [NIST-SP-800-38A], Appendix F.3.
 *
 * @copyright Galois, Inc.
 * @author Alex J Malozemoff <amaloz@galois.com>
 * www.cryptol.net
 *
 * Sources:
 * [NIST-SP-800-38A]: Morris Dworkin. Recommendation for Block Cipher
 *     Modes of Operation: Methods and Techniques. NIST Special Publication
 *     800-38A. December 2001.
 *     @see https://doi.org/10.6028/NIST.SP.800-38A
 */
module Primitive::Symmetric::Cipher::Block::Modes::Tests::AES192_CFB where
import Primitive::Symmetric::Cipher::Block::Modes::Instantiations::AES192_CFB as AES192_CFB

/**
 * Section F.3.3: CFB1-AES192.Encrypt
 *
 * ```repl
 * :prove aes192_cfb1_encrypt_vector
 * ```
 */
property aes192_cfb1_encrypt_vector = (AES192_CFB::encrypt key iv plaintext) == ciphertext
    where
        key = 0x8e73b0f7da0e6452c810f32b809079e562f8ead2522c6b7b
        iv  = 0x000102030405060708090a0b0c0d0e0f
        plaintext = [
            0b0, 0b1, 0b1, 0b0, 0b1, 0b0, 0b1, 0b1,
            0b1, 0b1, 0b0, 0b0, 0b0, 0b0, 0b0, 0b1
        ]
        ciphertext = [
            0b1, 0b0, 0b0, 0b1, 0b0, 0b0, 0b1, 0b1,
            0b0, 0b1, 0b0, 0b1, 0b1, 0b0, 0b0, 0b1
        ]

/**
 * Section F.3.4: CFB1-AES192.Decrypt
 *
 * ```repl
 * :prove aes192_cfb1_decrypt_vector
 * ```
 */
property aes192_cfb1_decrypt_vector = (AES192_CFB::decrypt key iv ciphertext) == plaintext
    where
        key = 0x8e73b0f7da0e6452c810f32b809079e562f8ead2522c6b7b
        iv  = 0x000102030405060708090a0b0c0d0e0f
        ciphertext = [
            0b1, 0b0, 0b0, 0b1, 0b0, 0b0, 0b1, 0b1,
            0b0, 0b1, 0b0, 0b1, 0b1, 0b0, 0b0, 0b1
        ]
        plaintext = [
            0b0, 0b1, 0b1, 0b0, 0b1, 0b0, 0b1, 0b1,
            0b1, 0b1, 0b0, 0b0, 0b0, 0b0, 0b0, 0b1
        ]

/**
 * Section F.3.9: CFB8-AES192.Encrypt
 *
 * ```repl
 * :prove aes192_cfb8_encrypt_vector
 * ```
 */
property aes192_cfb8_encrypt_vector = (AES192_CFB::encrypt key iv plaintext) == ciphertext
    where
        key = 0x8e73b0f7da0e6452c810f32b809079e562f8ead2522c6b7b
        iv  = 0x000102030405060708090a0b0c0d0e0f
        plaintext = [
            0x6b, 0xc1, 0xbe, 0xe2, 0x2e, 0x40, 0x9f, 0x96, 0xe9,
            0x3d, 0x7e, 0x11, 0x73, 0x93, 0x17, 0x2a, 0xae, 0x2d
        ]
        ciphertext = [
            0xcd, 0xa2, 0x52, 0x1e, 0xf0, 0xa9, 0x05, 0xca, 0x44,
            0xcd, 0x05, 0x7c, 0xbf, 0x0d, 0x47, 0xa0, 0x67, 0x8a
        ]

/**
 * Section F.3.10: CFB8-AES192.Decrypt
 *
 * ```repl
 * :prove aes192_cfb8_decrypt_vector
 * ```
 */
property aes192_cfb8_decrypt_vector = (AES192_CFB::decrypt key iv ciphertext) == plaintext
    where
        key = 0x8e73b0f7da0e6452c810f32b809079e562f8ead2522c6b7b
        iv  = 0x000102030405060708090a0b0c0d0e0f
        ciphertext = [
            0xcd, 0xa2, 0x52, 0x1e, 0xf0, 0xa9, 0x05, 0xca, 0x44,
            0xcd, 0x05, 0x7c, 0xbf, 0x0d, 0x47, 0xa0, 0x67, 0x8a
        ]
        plaintext = [
            0x6b, 0xc1, 0xbe, 0xe2, 0x2e, 0x40, 0x9f, 0x96, 0xe9,
            0x3d, 0x7e, 0x11, 0x73, 0x93, 0x17, 0x2a, 0xae, 0x2d
        ]

/**
 * Section F.3.15: CFB128-AES192.Encrypt
 *
 * ```repl
 * :prove aes192_cfb128_encrypt_vector
 * ```
 */
property aes192_cfb128_encrypt_vector = (AES192_CFB::encrypt key iv plaintext) == ciphertext
    where
        key = 0x8e73b0f7da0e6452c810f32b809079e562f8ead2522c6b7b
        iv  = 0x000102030405060708090a0b0c0d0e0f
        plaintext = [
            0x6bc1bee22e409f96e93d7e117393172a,
            0xae2d8a571e03ac9c9eb76fac45af8e51,
            0x30c81c46a35ce411e5fbc1191a0a52ef,
            0xf69f2445df4f9b17ad2b417be66c3710
        ]
        ciphertext = [
            0xcdc80d6fddf18cab34c25909c99a4174,
            0x67ce7f7f81173621961a2b70171d3d7a,
            0x2e1e8a1dd59b88b1c8e60fed1efac4c9,
            0xc05f9f9ca9834fa042ae8fba584b09ff
        ]

/**
 * Section F.3.16: CFB128-AES192.Decrypt
 *
 * ```repl
 * :prove aes192_cfb128_decrypt_vector
 * ```
 */
property aes192_cfb128_decrypt_vector = (AES192_CFB::decrypt key iv ciphertext) == plaintext
    where
        key = 0x8e73b0f7da0e6452c810f32b809079e562f8ead2522c6b7b
        iv =  0x000102030405060708090a0b0c0d0e0f
        ciphertext = [
            0xcdc80d6fddf18cab34c25909c99a4174,
            0x67ce7f7f81173621961a2b70171d3d7a,
            0x2e1e8a1dd59b88b1c8e60fed1efac4c9,
            0xc05f9f9ca9834fa042ae8fba584b09ff
        ]
        plaintext = [
            0x6bc1bee22e409f96e93d7e117393172a,
            0xae2d8a571e03ac9c9eb76fac45af8e51,
            0x30c81c46a35ce411e5fbc1191a0a52ef,
            0xf69f2445df4f9b17ad2b417be66c3710
        ]
