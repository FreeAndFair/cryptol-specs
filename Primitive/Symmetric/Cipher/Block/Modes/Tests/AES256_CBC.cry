/*
 * Test vectors for AES256 in CBC mode.
 * These are taken from [NIST-SP-800-38A] Appendix F.2
 *
 * @copyright Galois, Inc.
 * @author Ajay Kumar Eeralla
 * @author Marcella Hastings <marcella@galois.com>
 * @author Stanislav Lyakhov <stan@galois.com>
 *  www.cryptol.net
 *
 * References:
 * [NIST-SP-800-38A]: Morris Dworkin. Recommendation for Block Cipher
 * Modes of Operation: Methods and Techniques. NIST Special Publication
 * 800-38A. December 2001.
 *
 */
module Primitive::Symmetric::Cipher::Block::Modes::Tests::AES256_CBC where
import Primitive::Symmetric::Cipher::Block::Modes::Instantiations::AES256_CBC as AES256_CBC

/**
 * ```repl
 * :prove aes256_cbc_encrypt_vector
 * ```
 */
property aes256_cbc_encrypt_vector = (AES256_CBC::encrypt k iv plaintext) == ciphertext
    where
    k = 0x603deb1015ca71be2b73aef0857d77811f352c073b6108d72d9810a30914dff4
    iv = 0x000102030405060708090a0b0c0d0e0f
    plaintext = [
        0x6bc1bee22e409f96e93d7e117393172a,
        0xae2d8a571e03ac9c9eb76fac45af8e51,
        0x30c81c46a35ce411e5fbc1191a0a52ef,
        0xf69f2445df4f9b17ad2b417be66c3710]
    ciphertext = [
        0xf58c4c04d6e5f1ba779eabfb5f7bfbd6,
        0x9cfc4e967edb808d679f777bc6702c7d,
        0x39f23369a9d9bacfa530e26304231461,
        0xb2eb05e2c39be9fcda6c19078c6a9d1b]

/**
 * ```repl
 * :prove aes256_cbc_decrypt_vector
 * ```
 */
property aes256_cbc_decrypt_vector = (AES256_CBC::decrypt k iv ciphertext) == plaintext
    where
    k = 0x603deb1015ca71be2b73aef0857d77811f352c073b6108d72d9810a30914dff4
    iv = 0x000102030405060708090a0b0c0d0e0f
    ciphertext = [
        0xf58c4c04d6e5f1ba779eabfb5f7bfbd6,
        0x9cfc4e967edb808d679f777bc6702c7d,
        0x39f23369a9d9bacfa530e26304231461,
        0xb2eb05e2c39be9fcda6c19078c6a9d1b]
    plaintext = [
        0x6bc1bee22e409f96e93d7e117393172a,
        0xae2d8a571e03ac9c9eb76fac45af8e51,
        0x30c81c46a35ce411e5fbc1191a0a52ef,
        0xf69f2445df4f9b17ad2b417be66c3710]
