interface module Common::EC::ECInterface where
    /*
     * Representation of a point on the curve.
     *
     * This should be able to represent both concrete points and the point at
     * infinity.
     */
    type Point : *

    /*
     * Order of the elliptic curve.
     */
    n : Integer

    /*
     * Base point for the curve.
     */
    G : Point

    /*
     * Addition of two points.
     */
    add : Point -> Point -> Point

    /*
     * Subtraction of two points.
     */
    sub : Point -> Point -> Point

    /*
     * Doubling of a point (typically, elliptic curves offer optimized
     * routines for doubling a point compared to adding it to itself).
     */
    double : Point -> Point

    /*
     * Scalar multiplication of a point by an integer.
     */
    scmul : Integer -> Point -> Point

    /*
     * Twin multiplication of two points. This is the operation
     * [c]P + [d]Q, which sometimes has an optimized routine
     * compared to doing the scalar multiplications separately.
     */
    twin_mul : Integer -> Point -> Integer -> Point -> Point
