/**
 * Modular division for Z n types
 *
 * @copyright Galois, Inc.
 * @author Max Orhai
 */

module Common::ModDivZ where

/**
 * Check if some `k` is even.
 * ```repl
 * :prove even 2
 * :prove ~even 7
 * ```
 */
even k = k % 2 == 0

/**
 * Calulate x / y in F_p using Euler's binary gcd algorithm.
 * ```repl
 * :prove moddiv `{3} 2 2 == 1
 * ```
 */
moddiv : {p}(fin p, p >= 3, prime p) => Z p -> Z p -> Z p
moddiv x y = x * recip y

(%/) = moddiv  // infix form of operator
